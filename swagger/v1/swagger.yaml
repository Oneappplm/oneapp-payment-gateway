---
openapi: 3.0.1
info:
  title: OneApp Payment API
  version: v1
tags:
- name: Users
  description: User management
- name: Doctors
  description: Doctor management
- name: Patients
  description: Patient management
- name: Invoices
  description: Invoice management
paths:
  "/api/v1/doctors":
    get:
      summary: list doctors
      tags:
      - Doctors
      responses:
        '200':
          description: successful
  "/api/v1/doctors/{id}":
    get:
      summary: show doctor
      tags:
      - Doctors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: found
    patch:
      summary: update doctor
      tags:
      - Doctors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
  "/api/v1/doctors/{doctor_id}/invoices":
    parameters:
    - name: doctor_id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: List invoices
      tags:
      - Invoices
      responses:
        '200':
          description: successful
  "/api/v1/doctors/{doctor_id}/patients/{patient_id}/invoices":
    parameters:
    - name: doctor_id
      in: path
      required: true
      schema:
        type: string
    - name: patient_id
      in: path
      required: true
      schema:
        type: string
    post:
      summary: Create invoice
      tags:
      - Invoices
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_name:
                  type: string
                service_description:
                  type: text
                amount:
                  type: number
                discount:
                  type: decimal
                clinic_name:
                  type: string
                date_of_service:
                  type: date
                due_date:
                  type: date
              required:
              - service_name
              - service_description
              - amount
              - discount
              - clinic_name
              - date_of_service
              - due_date
  "/api/v1/doctors/{doctor_id}/patients/{patient_id}/invoices/{id}":
    parameters:
    - name: doctor_id
      in: path
      required: true
      schema:
        type: string
    - name: patient_id
      in: path
      required: true
      schema:
        type: string
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Show invoice
      tags:
      - Invoices
      responses:
        '200':
          description: successful
    put:
      summary: Update invoice
      tags:
      - Invoices
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                service_name:
                  type: string
                service_description:
                  type: text
    delete:
      summary: Delete invoice
      tags:
      - Invoices
      responses:
        '204':
          description: deleted
  "/api/v1/doctors/{doctor_id}/patients":
    parameters:
    - name: doctor_id
      in: path
      description: Doctor ID
      required: true
      schema:
        type: string
    get:
      summary: list patients
      tags:
      - Patients
      responses:
        '200':
          description: successful
    post:
      summary: create patient
      tags:
      - Patients
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    phone_number:
                      type: string
                    email_address:
                      type: string
                  required:
                  - first_name
                  - last_name
                  - phone_number
  "/api/v1/doctors/{doctor_id}/patients/{id}":
    parameters:
    - name: doctor_id
      in: path
      required: true
      schema:
        type: string
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: show patient
      tags:
      - Patients
      responses:
        '200':
          description: successful
    put:
      summary: update patient
      tags:
      - Patients
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    phone_number:
                      type: string
    delete:
      summary: delete patient
      tags:
      - Patients
      responses:
        '204':
          description: deleted
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
    post:
      summary: Register a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    user_role:
                      type: string
                      enum:
                      - doctor
                      - patient
                  required:
                  - email
                  - password
                  - password_confirmation
                  - user_role
                doctor:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    specialty:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    clinic_name:
                      type: string
                    clinic_address:
                      type: string
                    location:
                      type: string
                patient:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    phone_number:
                      type: string
                    dob:
                      type: string
                      format: date
  "/api/v1/users/{id}":
    get:
      summary: show user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: found
  "/api/v1/admin/audit_logs":
    get:
      summary: list audit logs
      tags:
      - Admin Audit Logs
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    created_at:
                      type: string
                      format: date_time
                    action:
                      type: string
                    action_type:
                      type: string
                    details:
                      type: string
                  required:
                  - created_at
                  - action
                  - action_type
                  - details
servers:
- url: http://localhost:3000
  description: Local server
